@{
    ViewData["Title"] = "Add Object | TravelHaven";
}

@model List<EntityModel>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    @section styles {
        <style>
            .enlarged-photo-container {
                display: none;
                position: fixed;
                z-index: 9999;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
            }

            .list-group-item {
                font-family: 'Poppins', sans-serif; /* Используем шрифт Poppins */
                color: #ffffff; /* Белый цвет текста */
                background-color: #47b0e7; /* Цвет фона, соответствующий шапке сайта */
                border: none;
                margin-bottom: 5px;
                transition: background-color 0.3s ease;
            }

                .list-group-item:hover {
                    background-color: #6aaed6; /* Цвет фона при наведении, слегка отличающийся для выделения */
                }

                .list-group-item.active {
                    background-color: #007bff;
                    border-color: #007bff;
                }

            #add-booking-date-room {
                display: block;
                margin: 0 auto;
            }

                #add-booking-date-room + div {
                    text-align: center;
                }

            #roomCost {
                width: 50%;
                margin: 10px auto;
            }

            .enlarged-photo {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                max-width: 90%;
                max-height: 90%;
                border: 2px solid #fff;
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            }

            .enlarged-photo-container1 {
                display: none;
                position: fixed;
                z-index: 9999;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
            }

            .enlarged-photo1 {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                max-width: 90%;
                max-height: 90%;
                border: 2px solid #fff;
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            }

            .enlarged-photo-container2 {
                display: none;
                position: fixed;
                z-index: 9999;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
            }

            .enlarged-photo2 {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                max-width: 90%;
                max-height: 90%;
                border: 2px solid #fff;
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            }

            .enlarged-photo-container3 {
                display: none;
                position: fixed;
                z-index: 9999;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
            }

            .enlarged-photo3 {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                max-width: 90%;
                max-height: 90%;
                border: 2px solid #fff;
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            }

            .close-btnn {
                position: absolute;
                top: 10px;
                right: 10px;
                color: #fff;
                font-size: 20px;
                cursor: pointer;
                z-index: 99999;
            }

            .close-btn {
                position: absolute;
                top: 10px;
                right: 10px;
                color: #fff;
                font-size: 20px;
                cursor: pointer;
                z-index: 99999;
            }

            .photo-item {
                width: 150px;
                height: 150px;
                margin: 5px;
                position: relative;
            }

            .delete-btn {
                top: 5px;
                right: 5px;
            }

            .img-thumbnail {
                max-height: 150px; /* Устанавливаем максимальную высоту */
                width: auto; /* Автоматически масштабируем ширину */
                max-width: 150%; /* Не допускаем переполнение родительского контейнера */
            }

            .form-signin > :last-child {
                margin-bottom: 56px; /* 56px - высота футера */
            }
        </style>
        <style>
            .btn-entity {
                background-color: #f1f1f1;
                color: #333;
                transition: background-color 0.3s, color 0.3s;
                border: none;
                width: 100%;
                padding: 10px;
                font-size: 16px;
            }

                .btn-entity:hover {
                    background-color: #ddd;
                    color: #222;
                }

                .btn-entity.selected {
                    background-color: #007bff;
                    color: #fff;
                }
        </style>
        <style>
            #notification {
                display: none;
                padding: 10px;
                margin-top: 10px;
                border-radius: 5px;
            }

            #notification1 {
                display: none;
                padding: 10px;
                margin-top: 10px;
                border-radius: 5px;
            }

            #notificationAttraction {
                display: none;
                padding: 10px;
                margin-top: 10px;
                border-radius: 5px;
            }

            #notificationAccomodation {
                display: none;
                padding: 10px;
                margin-top: 10px;
                border-radius: 5px;
            }

            #notificationAirTicket {
                display: none;
                padding: 10px;
                margin-top: 10px;
                border-radius: 5px;
            }

            .success-notification {
                background-color: #d4edda;
                color: #155724;
                border-color: #c3e6cb;
            }

            .text-danger {
                background-color: #f8d7da;
                color: #721c24;
                border-color: #f5c6cb;
            }

            .text-danger1 {
                background-color: #f8d7da;
                color: #721c24;
                border-color: #f5c6cb;
            }

            .text-danger11 {
                background-color: #f8d7da;
                color: #721c24;
                border-color: #f5c6cb;
            }

            .invalid-field {
                border-color: red !important;
            }
        </style>
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function validateForm() {
            var isValid = true;

            // Проверка каждого обязательного поля
            if (!$('#modelName').val()) {
                isValid = false;
            }
            if (!$('#carCountry').val()) {
                isValid = false;
            }
            if (!$('#carCity').val()) {
                isValid = false;
            }
            if (!$('#carAddress').val()) {
                isValid = false;
            }
            if (!$('#passengerCapacity').val()) {
                isValid = false;
            }
            if (!$('#description').val()) {
                isValid = false;
            }
            if (!$('#pricePer1hour').val()) {
                isValid = false;
            }

            // Проверка радиокнопок
            if (!$('input[name="model.IsAirCondition"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.UnlimitedMileage"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.ElectricCar"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.TheftCoverage"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.CollisionDamageWaiver"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.LiabilityCoverage"]:checked').length) {
                isValid = false;
            }
            if (!$('input[name="model.FreeCancellation"]:checked').length) {
                isValid = false;
            }

            // Проверка дат
            $('.booking-date').each(function () {
                var startDate = $(this).find('input[name="model.startDates[]"]').val();
                var endDate = $(this).find('input[name="model.endDates[]"]').val();
                if (!startDate || !endDate) {
                    isValid = false;
                    return false; // Выход из цикла each
                }
            });

            // Вывод уведомления
            if (!isValid) {
                $('#notification').text('Please fill in all required fields.').addClass('text-danger').show();
            }
            else {
    
            }

            return isValid;
        }
        function showSuccessMessage(message) {
            $('#notification1').text(message).addClass('success-notification').show();
        }
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]'; // Получение сообщения об успешном сохранении с сервера
            if (successMessage) {
                showSuccessMessage(successMessage); // Отображение уведомления об успешном сохранении
            }
        });
        $(document).ready(function () {
            // Обработчик события клика на кнопки сущностей
            $('.btn-entity').click(function () {
                // Скрываем уведомление
                $('#notification1').hide();
            });
        });

        function validateAttractionForm() {
            // Проверка текстовых полей
            var attractionName = $('#attractionName').val();
            var attractionCountry = $('#attractionCountry').val();
            var attractionCity = $('#attractionCity').val();
            var attractionAddress = $('#attractionAddress').val();
            var description = $('#descriptionAttraction').val();
            var cost = $('#cost').val();

            // Проверка выбранных радиокнопок
            var freeCancellation = $('#freeCancellationYes').is(':checked');
            if (!freeCancellation) {
                freeCancellation = $('#freeCancellationNo').is(':checked');
            }

            // Проверка выбранных чекбоксов
            var languages = $('input[name="model.Languages[]"]:checked').length > 0;

            // Проверка загруженных фотографий
            var photoCount = $('#photoContainer').children().length;

            // Проверка всех динамически добавленных полей
            var dynamicFieldsFilled = true;
            $('.booking-date-attraction').each(function () {
                var date = $(this).find('input[name="model.AvailableDates[]"]').val();
                var tickets = $(this).find('input[name="model.AmountOfTickets[]"]').val();
                if (date === '' || tickets === '') {
                    dynamicFieldsFilled = false;
                    return false; // Выход из цикла each
                }
            });
            var isValid = true;
            // Проверка всех условий
            if (attractionName === '' || attractionCountry === '' || attractionCity === '' || attractionAddress === '' || description === '' || cost === '' || !freeCancellation || !languages || photoCount === 0 || !dynamicFieldsFilled) {
                $('#notificationAttraction').text('Please fill in all required fields.').addClass('text-danger').show();
                isValid = false;
            }
            return isValid;
        }

        function showSuccessMessage(message) {
            $('#notification1').text(message).addClass('success-notification').show();
        }

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]'; // Получение сообщения об успешном сохранении с сервера
            if (successMessage) {
                showSuccessMessage(successMessage); // Отображение уведомления об успешном сохранении
            }
        });
        $(document).ready(function () {
            // Обработчик события клика на кнопки сущностей
            $('.btn-entity').click(function () {
                // Скрываем уведомление
                $('#notification1').hide();
            });
        });

        function validateAirTicketForm() {
            // Проверка текстовых полей
            var airTicketDepartureCountry = $('#departureCountry').val();
            var airTicketDepartureCity = $('#departureCity').val();
            var airTicketArrivalCountry = $('#arrivalCountry').val();
            var airTicketArrivalCity = $('#arrivalCity').val();
            var flightNumber = $('#flightNumber').val();
            var costEC = $('#ticketCostEC').val();
            var costBC = $('#ticketCostBC').val();
            var costFC = $('#ticketCostFC').val();
            var amountOfTicketsEC = $('#amountOfTicketsEC').val();
            var amountOfTicketsBC = $('#amountOfTicketsBC').val();
            var amountOfTicketsFC = $('#amountOfTicketsFC').val();
            var departureCountryCode = $('#departureCountryCode').val();
            var arrivalCountryCode = $('#arrivalCountryCode').val();

            // Проверка выбранных радиокнопок
            var freeCancellation = $('#freeCancellationYesAirTicket').is(':checked');
            if (!freeCancellation) {
                freeCancellation = $('#freeCancellationNoAirTicket').is(':checked');
            }
            var includeLuggageEC = $('#includeLuggageForEconomyClassYes').is(':checked');
            if (!includeLuggageEC) {
                includeLuggageEC = $('#includeLuggageForEconomyClassNo').is(':checked');
            }
            var includeLuggageBC = $('#includeLuggageForBusinessClassYes').is(':checked');
            if (!includeLuggageBC) {
                includeLuggageBC = $('#includeLuggageForBusinessClassNo').is(':checked');
            }
            var includeLuggageFC = $('#includeLuggageForFirstClassYes').is(':checked');
            if (!includeLuggageFC) {
                includeLuggageFC = $('#includeLuggageForFirstClassNo').is(':checked');
            }

            var isValid = true;
            if (!freeCancellation || !includeLuggageEC || !includeLuggageBC || !includeLuggageFC) {
                $('#notificationAirTicket').text('Please fill in all required fields.').addClass('text-danger').show();
                isValid = false;
            }
            if (departureCountryCode === '') {
                $('#departureCountryCode').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#departureCountryCode').removeClass('invalid-field');
            }
            if (arrivalCountryCode === '') {
                $('#arrivalCountryCode').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#arrivalCountryCode').removeClass('invalid-field');
            }
            if (airTicketDepartureCountry === '') {
                $('#departureCountry').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#departureCountry').removeClass('invalid-field');
            }
            if (airTicketDepartureCity === '') {
                $('#departureCity').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#departureCity').removeClass('invalid-field');
            }
            if (airTicketArrivalCountry === '') {
                $('#arrivalCountry').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#arrivalCountry').removeClass('invalid-field');
            }
            if (airTicketArrivalCity === '') {
                $('#arrivalCity').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#arrivalCity').removeClass('invalid-field');
            }
            if (flightNumber === '') {
                $('#flightNumber').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#flightNumber').removeClass('invalid-field');
            }
            if (costEC === '') {
                $('#ticketCostEC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#ticketCostEC').removeClass('invalid-field');
            }
            if (costBC === '') {
                $('#ticketCostBC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#ticketCostBC').removeClass('invalid-field');
            }
            if (costFC === '') {
                $('#ticketCostFC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#ticketCostFC').removeClass('invalid-field');
            }
            if (amountOfTicketsEC === '') {
                $('#amountOfTicketsEC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#amountOfTicketsEC').removeClass('invalid-field');
            }
            if (amountOfTicketsBC === '') {
                $('#amountOfTicketsBC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#amountOfTicketsBC').removeClass('invalid-field');
            }
            if (amountOfTicketsFC === '') {
                $('#amountOfTicketsFC').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#amountOfTicketsFC').removeClass('invalid-field');
            }
            if (!isValid) {
                $('#departureCity, #arrivalCountry, #arrivalCity, #flightNumber, #ticketCostEC, #ticketCostBC, #ticketCostFC, #amountOfTicketsEC, #amountOfTicketsBC, #amountOfTicketsFC, #arrivalCountryCode, #departureCountryCode').removeClass('invalid-field');
                $('#notificationAirTicket').text('Please fill in all required fields.').addClass('text-danger1').show();
            }
            return isValid;
        }

        function showSuccessMessage(message) {
            $('#notification1').text(message).addClass('success-notification').show();
        }

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]'; // Получение сообщения об успешном сохранении с сервера
            if (successMessage) {
                showSuccessMessage(successMessage); // Отображение уведомления об успешном сохранении
            }
        });
        $(document).ready(function () {
            // Обработчик события клика на кнопки сущностей
            $('.btn-entity').click(function () {
                // Скрываем уведомление
                $('#notification1').hide();
            });
        });

        function validateAccomodationForm() {
            // Проверка текстовых полей
            var accomodationName = $('#accomodationName').val();
            var accomodationCountry = $('#accomodationCountry').val();
            var accomodationCity = $('#accomodationCity').val();
            var accomodationAddress = $('#accomodationAddress').val();
            var amountOfRestaurants = $('#restaurants').val();
            var accomodationDescription = $('#descriptionAccomodation').val();
            var swimmingpools = $('#swimmingpools').val();

            var nutrition = $('input[name="model.TypesOfNutrition[]"]:checked').length > 0;

            // Проверка загруженных фотографий
            var photoCount = $('#photoContainerAccomodation').children().length;

            // Проверка выбранных радиокнопок
            var features = [
                'parking',
                'freeWIFI',
                'privateBeach',
                'SPA',
                'Bar',
                'garden',
                'transferToAirport',
                'tactileSigns',
                'smookingRooms',
                'familyRooms',
                'carChargingStation',
                'wheelchairAccessible',
                'fitnessCentre',
                'petsAllowed',
                'deliveryFoodToTheRoom',
                'everyHourFrontDesk'
            ];

            var isValid = true;

            features.forEach(function (feature) {
                var yesChecked = $('#' + feature + 'Yes').is(':checked');
                var noChecked = $('#' + feature + 'No').is(':checked');

                if (!yesChecked && !noChecked) {
                    isValid = false;
                }
            });

            if (!isValid) {
                $('#notificationAccomodation').text('Please fill in all required fields.').addClass('text-danger11').show();
            }

            if (accomodationName === '') {
                $('#accomodationName').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#accomodationName').removeClass('invalid-field');
            }
            if (swimmingpools === '') {
                $('#swimmingpools').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#swimmingpools').removeClass('invalid-field');
            }
            if (accomodationCountry === '') {
                $('#accomodationCountry').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#accomodationCountry').removeClass('invalid-field');
            }
            if (accomodationCity === '') {
                $('#accomodationCity').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#accomodationCity').removeClass('invalid-field');
            }
            if (accomodationAddress === '') {
                $('#accomodationAddress').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#accomodationAddress').removeClass('invalid-field');
            }
            if (amountOfRestaurants === '') {
                $('#restaurants').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#restaurants').removeClass('invalid-field');
            }
            if (accomodationDescription === '') {
                $('#descriptionAccomodation').addClass('invalid-field');
                isValid = false;
            }
            else {
                $('#descriptionAccomodation').removeClass('invalid-field');
            }

            if (!nutrition || photoCount === 0) {
                isValid = false;
            }
            
            if (!isValid) {
                $('#notificationAccomodation').text('Please fill in all required fields.').addClass('text-danger11').show();
            }
            return isValid;
        }

        function showSuccessMessage(message) {
            $('#notification1').text(message).addClass('success-notification').show();
        }

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]'; // Получение сообщения об успешном сохранении с сервера
            if (successMessage) {
                showSuccessMessage(successMessage); // Отображение уведомления об успешном сохранении
            }
        });
        $(document).ready(function () {
            // Обработчик события клика на кнопки сущностей
            $('.btn-entity').click(function () {
                // Скрываем уведомление
                $('#notification1').hide();
            });
        });
    </script>
</head>

<main class="form-signin w-100 m-auto text-center" style="padding-bottom: 30px;">
    <body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                    <div class="list-group">
                        <a href="/Account/ViewProfile" class="list-group-item style="color: #ffffff;">Account</a>
                        @{
                            if (User.IsInRole("traveller") || User.IsInRole("Traveller"))
                            {
                                <a href="/Account/ShowFavoriteItems" class="list-group-item">My Favorite</a>
                                <a href="/Account/ShowBookingItems" class="list-group-item">My Verified Bookings</a>
                                <a href="/Account/ShowUnverifiedBookingItems" class="list-group-item">My Bookings Awaiting Verification</a>
                                <a href="/Account/ShowRejectedBookingItems" class="list-group-item">My Rejected Bookings</a>
                            }
                            else if (User.IsInRole("owner of company") || User.IsInRole("Owner of company"))
                            {
                                <a href="/Account/AddObject" class="list-group-item">Add Object</a>
                                <a href="/Account/VerifiedObjects" class="list-group-item">My Verified Objects</a>
                                <a href="/Account/UnverifiedObjects" class="list-group-item">My Unverified Objects</a>
                                <a href="/Account/RejectedObjects" class="list-group-item">My Rejected Objects</a>
                                <a href="/Account/BookingsForVerification" class="list-group-item">Bookings For Verification</a>
                                <a href="/Account/VerifiedBookings" class="list-group-item">Verified Bookings</a>
                                <a href="/Account/RejectedBookings" class="list-group-item">Rejected Bookings</a>
                            }
                            else
                            {
                                <a href="/Account/AllUnverifiedObjects" class="list-group-item">Objects Requiring Verification</a>
                                <a href="/Account/AllVerifiedObjects" class="list-group-item">Verified Objects</a>
                                <a href="/Account/AllRejectedObjects" class="list-group-item">Rejected Objects</a>
                            }
                        }
                    </div>
            </div>
            <div class="col-md-9">
                <div class="row">
                    <div class="col">
                            <h3 class="bookings-title">Select the entity for the new object</h3>
                            <div class="row" style="margin-top: 20px;">
                        @foreach (var entity in Model)
                        {
                            <div class="col-md-3">
                                <button class="btn btn-entity" data-entity="@entity.Name">@entity.Name</button>
                            </div>
                        }
                        </div>
                        <div id="notification1" class="success-notification" style="display:none;"></div>
                        <div id="entity-info" class="mt-1"></div>
                            <div id="car-fields" class="mt-5" style="display: none;">

                                <form id="car-form" asp-action="SaveForm" asp-controller="Account" style="display: inline-block;" asp-anti-forgery="true" enctype="multipart/form-data" onsubmit="return validateForm()">
                                <div class="car-info" style="text-align: center;">
                                    <div class="photo-container" style="position: relative; display: inline-block;">
                                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(ViewBag.CarPhoto)" class="car-photo" style="margin-right: 20px; margin-bottom: 20px; margin-top: 1px; width: 450px; height: 300px; object-fit: cover;" onclick="openPhoto()" onmouseover="showDeleteButton(event)" onmouseout="hideDeleteButton()">
                                        <button class="delete-btn" style="display: none; position: absolute; top: 5px; right: 5px; background-color: transparent; border: none; color: #fff; font-size: 24px; cursor: pointer;" onclick="deletePhoto()">✖</button>
                                    </div>
                                    <div style="clear: both;"></div>
                                    <input type="file" name="file" id="file" style="display: none;" onchange="handleFileSelect(this)">
                                    <label for="file" class="btn btn-primary" style="margin-right: 20px; margin-top: -5px;">Upload a Photo</label>
                                </div>

                                <!-- Скрытый контейнер для увеличенного изображения -->
                                <div id="enlarged-photo-container" class="enlarged-photo-container">
                                    <span class="close-btn" onclick="closePhoto()">✕</span>
                                    <img id="enlarged-photo" class="enlarged-photo">
                                </div>

                                <script>
                                    function openPhoto() {
                                        var imgSrc = document.querySelector('.car-photo').src;
                                        var enlargedImgContainer = document.getElementById('enlarged-photo-container');
                                        var enlargedImg = document.getElementById('enlarged-photo');
                                        enlargedImg.src = imgSrc;
                                        enlargedImgContainer.style.display = 'block';
                                    }

                                    function closePhoto() {
                                        var enlargedImgContainer = document.getElementById('enlarged-photo-container');
                                        enlargedImgContainer.style.display = 'none';
                                    }
                                </script>

                                    <script>
                                        function handleFileSelect(input) {
                                            if (input.files && input.files[0]) {
                                                var reader = new FileReader();
                                                reader.onload = function (e) {
                                                    $('.car-photo').attr('src', e.target.result);
                                                }
                                                reader.readAsDataURL(input.files[0]);
                                            }
                                        }
                                    </script>

                                <div class="form-group">
                                    <label for="carName" style="margin-top: 15px;">Car Model</label>
                                    <input type="text" name="model.Title" class="form-control" id="modelName" placeholder="Enter the car model" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="carCountry" style="margin-top: 15px;">Country</label>
                                    <input type="text" name="model.Country" class="form-control" id="carCountry" placeholder="Enter the country" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="carCity" style="margin-top: 15px;">City</label>
                                    <input type="text" name="model.City" class="form-control" id="carCity" placeholder="Enter the city" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="carAddress" style="margin-top: 15px;">Address</label>
                                    <input type="text" name="model.Address" class="form-control" id="carAddress" placeholder="Enter the address" style="margin-top: 10px;">
                                </div>
                                <div class="mb-3">
                                    <label for="airConditioner" class="form-label" style="margin-top: 15px;">Air Conditioning</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" name="model.IsAirCondition" type="radio" id="isAirConditionYes" value="true">
                                            <label class="form-check-label" for="isAirConditionYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" name="model.IsAirCondition" type="radio" id="isAirConditionNo" value="false">
                                            <label class="form-check-label" for="isAirConditionNo">No</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="transmission" class="form-label" style="margin-top: 15px;">Transmission</label>
                                    <div class="input-group">
                                        <select class="form-select" name="model.Transmission" id="transmission" type="hidden">
                                            <option value="Automatic">Automatic</option>
                                            <option value="Manual">Manual</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="unlimitedMileage" class="form-label" style="margin-top: 15px;">Mileage</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.UnlimitedMileage" id="unlimitedMileageYes" value="true">
                                            <label class="form-check-label" for="unlimitedMileageYes">Unlimited</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.UnlimitedMileage" id="unlimitedMileageNo" value="false">
                                            <label class="form-check-label" for="unlimitedMileageNo">Limited</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="electricCar" class="form-label" style="margin-top: 15px;">Electric Car</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.ElectricCar" id="electricCarYes" value="true">
                                            <label class="form-check-label" for="electricCarYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.ElectricCar" id="electricCarNo" value="false">
                                            <label class="form-check-label" for="electricCarNo">No</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="carCategory" class="form-label" style="margin-top: 15px;">Car Category</label>
                                    <div class="input-group">
                                        <select class="form-select" id="carCategory" name="model.CarCategory" type="hidden">
                                            <option value="Small">Small</option>
                                            <option value="Medium">Medium</option>
                                            <option value="Large">Large</option>
                                            <option value="Estate">Estate</option>
                                            <option value="Premium">Premium</option>
                                            <option value="People Carriers">People Carriers</option>
                                            <option value="SUVs">SUVs</option>
                                        </select>
                                    </div>
                                </div>
                                <label for="passengerCapacity" style="margin-top: 15px;">Passenger Capacity</label>
                                <input type="number" class="form-control" name="model.AmountOfPassengers" id="passengerCapacity" placeholder="Enter passenger capacity" min="0" max="100" style="margin-top: 10px;">
                                <div class="mb-3">
                                    <label for="theftCoverage" class="form-label" style="margin-top: 15px;">Theft Coverage</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.TheftCoverage" id="theftCoverageYes" value="true">
                                            <label class="form-check-label" for="theftCoverageYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.TheftCoverage" id="theftCoverageNo" value="false">
                                            <label class="form-check-label" for="theftCoverageNo">No</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="collisionDamageWaiver" class="form-label" style="margin-top: 15px;">Collision Damage Waiver</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.CollisionDamageWaiver" id="collisionDamageWaiverYes" value="true">
                                            <label class="form-check-label" for="collisionDamageWaiverYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.CollisionDamageWaiver" id="collisionDamageWaiverNo" value="false">
                                            <label class="form-check-label" for="collisionDamageWaiverNo">No</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="liabilityCoverage" class="form-label" style="margin-top: 15px;">Liability Coverage</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.LiabilityCoverage" id="liabilityCoverageYes" value="true">
                                            <label class="form-check-label" for="liabilityCoverageYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.LiabilityCoverage" id="liabilityCoverageNo" value="false">
                                            <label class="form-check-label" for="liabilityCoverageNo">No</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="freeCancellation" class="form-label" style="margin-top: 15px;">Free Cancellation</label><br>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationYesAttraction" value="true">
                                            <label class="form-check-label" for="freeCancellationYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationNoAttraction" value="false">
                                            <label class="form-check-label" for="freeCancellationNo">No</label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="description" style="margin-top: 15px;">Car Description</label>
                                    <textarea class="form-control" id="description" name="model.Description" placeholder="Enter the car description" rows="5" style="margin-top: 10px;"></textarea>
                                </div>
                                <label for="pricePer1hour" style="margin-top:15px;">Price Per 1 hour Of Rent</label>
                                <input type="number" class="form-control" name="model.Cost" id="pricePer1hour" placeholder="Enter price per 1 hour of rent" step="0.01" min="0" max="10000" style="margin-top: 10px;">
                                <label for="availableDates" style="margin-top: 15px;">All Available Dates For Booking</label>
                                <div id="booking-dates">
                                    <div class="booking-date" style="margin-top: 15px;">
                                        <label style="margin-right: 10px;">Start Date:</label>
                                        <input type="datetime-local" name="model.startDates[]" required min="{{minStartDate}}">
                                        <label style="margin-left: 10px;">Finish Date:</label>
                                        <input type="datetime-local" name="model.endDates[]" required min="{{minEndDate}}">
                                    </div>
                                </div>
                                <button id="add-booking-date" class="btn btn-primary rounded-circle" style="margin-top: 15px; background-color: #fff; border-color: #fff; color: #000;">
                                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="50" height="50" viewBox="0 0 128 128">
                                        <path d="M 64 6.0507812 C 49.15 6.0507812 34.3 11.7 23 23 C 0.4 45.6 0.4 82.4 23 105 C 34.3 116.3 49.2 122 64 122 C 78.8 122 93.7 116.3 105 105 C 127.6 82.4 127.6 45.6 105 23 C 93.7 11.7 78.85 6.0507812 64 6.0507812 z M 64 12 C 77.3 12 90.600781 17.099219 100.80078 27.199219 C 121.00078 47.499219 121.00078 80.500781 100.80078 100.80078 C 80.500781 121.10078 47.500781 121.10078 27.300781 100.80078 C 7.0007813 80.500781 6.9992188 47.499219 27.199219 27.199219 C 37.399219 17.099219 50.7 12 64 12 z M 64 42 C 62.3 42 61 43.3 61 45 L 61 61 L 45 61 C 43.3 61 42 62.3 42 64 C 42 65.7 43.3 67 45 67 L 61 67 L 61 83 C 61 84.7 62.3 86 64 86 C 65.7 86 67 84.7 67 83 L 67 67 L 83 67 C 84.7 67 86 65.7 86 64 C 86 62.3 84.7 61 83 61 L 67 61 L 67 45 C 67 43.3 65.7 42 64 42 z"></path>
                                    </svg>
                                </button>
                                <div class="user-info" style="text-align: center;">
                                        <button id="save-button" type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Save</button>

                                    </form>
                                    <form asp-action="ClearForm" asp-controller="Account" asp-anti-forgery="true" enctype="multipart/form-data" style="display: inline-block;">
                                        <button type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Clear</button>
                                    </form>

                            </div>
                                 <div id="notification" class="text-danger" style="display:none;"></div>
                    </div>
                        <div id="entertainment-fields" class="mt-5" style="display: none;">
                            <form id="entertainment-form" asp-action="SaveEntertainmentForm" asp-controller="Account" style="display: inline-block;" asp-anti-forgery="true" enctype="multipart/form-data" onsubmit="return validateAttractionForm()">
                                <div id="photoContainer" class="d-flex flex-wrap"></div>
                                <input type="hidden" id="photoData" name="photoData" />
                                <div class="form-group">
                                    <input type="file" name="photos" id="photoUpload" multiple style="display:none;">
                                    <button type="button" class="btn btn-primary" id="uploadBtn">Upload Photos</button>
                                </div>
                                <script>
                                    $(document).ready(function () {
                                        let photoArray = [];

                                        $("#uploadBtn").click(function () {
                                            $("#photoUpload").click();
                                        });

                                        $("#photoUpload").change(function () {
                                            var files = this.files;
                                            var container = $("#photoContainer");

                                            $.each(files, function (index, file) {
                                                var reader = new FileReader();
                                                reader.onload = function (e) {
                                                    var imageSrc = e.target.result;
                                                    var image = $('<div class="photo-item d-flex align-items-center justify-content-center position-relative"></div>').append(
                                                        $('<img class="img-thumbnail">').attr({ 'src': imageSrc, 'data-src': imageSrc }).click(function () {
                                                            openPhoto1($(this).attr('data-src'));
                                                        }),
                                                        $('<button class="btn btn-sm btn-danger delete-btn position-absolute" title="Delete">&times;</button>').click(function () {
                                                            $(this).parent().remove();
                                                            photoArray = photoArray.filter(src => src !== imageSrc);
                                                            $("#photoData").val(JSON.stringify(photoArray));
                                                        })
                                                    );
                                                    container.append(image);
                                                    photoArray.push(imageSrc);
                                                    $("#photoData").val(JSON.stringify(photoArray));
                                                };
                                                reader.readAsDataURL(file);
                                            });
                                        });
                                    });

                                    // Функция для отображения увеличенного изображения
                                    function openPhoto1(imgSrc) {
                                        var enlargedImgContainer = document.getElementById('enlarged-photo-container1');
                                        var enlargedImg = document.getElementById('enlarged-photo1');
                                        enlargedImg.src = imgSrc;
                                        enlargedImgContainer.style.display = 'block';
                                    }

                                    // Функция для закрытия увеличенного изображения
                                    function closePhoto1() {
                                        var enlargedImgContainer = document.getElementById('enlarged-photo-container1');
                                        enlargedImgContainer.style.display = 'none';
                                    }
                                </script>

                                <!-- Скрытый контейнер для увеличенного изображения -->
                                <div id="enlarged-photo-container1" class="enlarged-photo-container1">
                                    <span class="close-btnn" onclick="closePhoto1()">✕</span>
                                    <img id="enlarged-photo1" class="enlarged-photo1">
                                </div>

                                <div class="form-group">
                                    <label for="attractionName" style="margin-top: 15px;">Attraction Name</label>
                                    <input type="text" name="model.Title" class="form-control" id="attractionName" placeholder="Enter the attraction name" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="attractionCountry" style="margin-top: 15px;">Country Of Location</label>
                                    <input type="text" name="model.Country" class="form-control" id="attractionCountry" placeholder="Enter the country of location" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="attractionCity" style="margin-top: 15px;">City Of Location</label>
                                    <input type="text" name="model.City" class="form-control" id="attractionCity" placeholder="Enter the city of location" style="margin-top: 10px;">
                                </div>
                                <div class="form-group">
                                    <label for="attractionAddress" style="margin-top: 15px;">Address Of Location</label>
                                    <input type="text" name="model.Address" class="form-control" id="attractionAddress" placeholder="Enter the address of location" style="margin-top: 10px;">
                                </div>
                                <div class="mb-3">
                                    <label for="language" class="form-label" style="margin-top: 15px;">Language</label><br>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="EnglishLang" value="English">
                                        <label class="form-check-label" for="language">English</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="DutchLang" value="Dutch">
                                        <label class="form-check-label" for="language">Dutch</label>
                                    </div>
                                     <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="GermanLang" value="German">
                                        <label class="form-check-label" for="language">German</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="SpanishLang" value="Spanish">
                                        <label class="form-check-label" for="language">Spanish</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="FrenchLang" value="French">
                                        <label class="form-check-label" for="language">French</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="ItalianLang" value="Italian">
                                        <label class="form-check-label" for="language">Italian</label>
                                    </div>
                                     <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="PortugueseLang" value="Portuguese">
                                        <label class="form-check-label" for="language">Portuguese</label>
                                    </div>
                                     <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="ChineseLang" value="Chinese">
                                        <label class="form-check-label" for="language">Chinese</label>
                                    </div>
                                     <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="RussianLang" value="Russian">
                                        <label class="form-check-label" for="language">Russian</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="JapaneseLang" value="Japanese">
                                        <label class="form-check-label" for="language">Japanese</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="ArabicLang" value="Arabic">
                                        <label class="form-check-label" for="language">Arabic</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="model.Languages[]" id="FilipinoLang" value="Filipino">
                                        <label class="form-check-label" for="language">Filipino</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="attractionCategory" class="form-label" style="margin-top: 15px;">Attraction Category</label>
                                    <div class="input-group">
                                        <select class="form-select" id="attractionCategory" name="model.Category" type="hidden">
                                            <option value="Tours">Tours</option>
                                            <option value="Museum, arts & culture">Museum, arts & culture</option>
                                            <option value="Nature & outdoor">Nature & outdoor</option>
                                            <option value="Entertainment & tickets">Entertainment & tickets</option>
                                            <option value="Food & drink">Food & drink</option>
                                            <option value="Workshops & classes">Workshops & classes</option>
                                            <option value="Travel services & rentals">Travel services & rentals</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="timeOfDay" class="form-label" style="margin-top: 15px;">Time Of Day</label>
                                    <div class="input-group">
                                        <select class="form-select" id="timeOfDay" name="model.TimeOfDay" type="hidden">
                                            <option value="Morning">Morning</option>
                                            <option value="Afternoon">Afternoon</option>
                                            <option value="Evening & Night">Evening & Night</option>
                                            <option value="All Day">All Day</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="freeCancellation" class="form-label" style="margin-top: 15px;">Free Cancellation</label><br>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationYes" value="true">
                                        <label class="form-check-label" for="freeCancellationYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationNo" value="false">
                                        <label class="form-check-label" for="freeCancellationNo">No</label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="descriptionAttraction" style="margin-top: 15px;">Attraction Description</label>
                                    <textarea class="form-control" id="descriptionAttraction" name="model.Description" placeholder="Enter the attraction description" rows="5" style="margin-top: 10px;"></textarea>
                                </div>
                                <label for="cost" style="margin-top:15px;">Price Per 1 Person</label>
                                <input type="number" class="form-control" name="model.Cost" id="cost" placeholder="Enter price per 1 person" step="0.01" min="0" max="10000" style="margin-top: 10px;">
                                <div id="booking-dates-attraction">
                                    <div class="booking-date-attraction" style="margin-top: 15px;">
                                        <label for="availableDatesAttraction" style="margin-top: 15px;">Available Dates For Booking & Amount Of Tickets</label>
                                        <div class="input-group">
                                            <input type="date" class="form-control" name="model.AvailableDates[]" required min="{{minDate}}">
                                            <input type="number" class="form-control" name="model.AmountOfTickets[]" placeholder="Enter amount of tickets" min="0" max="10000">
                                        </div>
                                    </div>
                                </div>
                                <button id="add-booking-date-attraction" class="btn btn-primary rounded-circle" style="margin-top: 15px; background-color: #fff; border-color: #fff; color: #000;">
                                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="50" height="50" viewBox="0 0 128 128">
                                        <path d="M 64 6.0507812 C 49.15 6.0507812 34.3 11.7 23 23 C 0.4 45.6 0.4 82.4 23 105 C 34.3 116.3 49.2 122 64 122 C 78.8 122 93.7 116.3 105 105 C 127.6 82.4 127.6 45.6 105 23 C 93.7 11.7 78.85 6.0507812 64 6.0507812 z M 64 12 C 77.3 12 90.600781 17.099219 100.80078 27.199219 C 121.00078 47.499219 121.00078 80.500781 100.80078 100.80078 C 80.500781 121.10078 47.500781 121.10078 27.300781 100.80078 C 7.0007813 80.500781 6.9992188 47.499219 27.199219 27.199219 C 37.399219 17.099219 50.7 12 64 12 z M 64 42 C 62.3 42 61 43.3 61 45 L 61 61 L 45 61 C 43.3 61 42 62.3 42 64 C 42 65.7 43.3 67 45 67 L 61 67 L 61 83 C 61 84.7 62.3 86 64 86 C 65.7 86 67 84.7 67 83 L 67 67 L 83 67 C 84.7 67 86 65.7 86 64 C 86 62.3 84.7 61 83 61 L 67 61 L 67 45 C 67 43.3 65.7 42 64 42 z"></path>
                                    </svg>
                                </button>
                                <div class="attraction-info" style="text-align: center;">
                                    <button id="save-button-attraction" type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Save</button>
                            </form>
                            <form asp-action="ClearForm" asp-controller="Account" asp-anti-forgery="true" enctype="multipart/form-data" style="display: inline-block;">
                                <button type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Clear</button>
                            </form>
                        </div>
                        <div id="notificationAttraction" class="text-danger1" style="display:none;"></div>
                </div>
                    <div id="flight-fields" class="mt-5" style="display: none;">
                        <form id="flight-form" asp-action="SaveFlightForm" asp-controller="Account" style="display: inline-block;" asp-anti-forgery="true" enctype="multipart/form-data" onsubmit="return validateAirTicketForm()">    
                            <div class="form-group">
                                <label for="departureCountry" style="margin-top: 15px;">Departure Country</label>
                                <input type="text" name="model.CountryFrom" class="form-control" id="departureCountry" placeholder="Enter departure country" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="departureCountryCode" style="margin-top: 15px;">Departure City Code</label>
                                <input type="text" name="model.DepartureCountryCode" class="form-control" id="departureCountryCode" placeholder="Enter departure country code" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="departureCity" style="margin-top: 15px;">Departure City</label>
                                <input type="text" name="model.CityFrom" class="form-control" id="departureCity" placeholder="Enter departure city" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="arrivalCountry" style="margin-top: 15px;">Country of Arrival</label>
                                <input type="text" name="model.CountryTo" class="form-control" id="arrivalCountry" placeholder="Enter country of arrival" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="arrivalCountryCode" style="margin-top: 15px;">City Code of Arrival</label>
                                <input type="text" name="model.ArrivalCountryCode" class="form-control" id="arrivalCountryCode" placeholder="Enter country code of arrival" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="arrivalCity" style="margin-top: 15px;">City of Arrival</label>
                                <input type="text" name="model.CityTo" class="form-control" id="arrivalCity" placeholder="Enter city of arrival" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="flightNumber" style="margin-top: 15px;">Flight Number</label>
                                <input type="text" name="model.FlightNumber" class="form-control" id="flightNumber" placeholder="Enter flight number" style="margin-top: 10px;">
                            </div>
                            <div class="mb-3">
                                <label for="freeCancellation" class="form-label" style="margin-top: 15px;">Free Cancellation</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationYesAirTicket" value="true">
                                    <label class="form-check-label" for="freeCancellationYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FreeCancellation" id="freeCancellationNoAirTicket" value="false">
                                    <label class="form-check-label" for="freeCancellationNo">No</label>
                                </div>
                            </div>
                            <div id="booking-dates-flight">
                                <div class="booking-date-flight" style="margin-top: 15px;">
                                    <label for="availableDatesFlight" style="margin-top: 15px;">Departure Time & Arrival Time</label>
                                    <div class="input-group">
                                        <input type="datetime-local" class="form-control" name="model.DepartureTime" required min="{{minDateFlight}}">
                                        <input type="datetime-local" class="form-control" name="model.ArrivalTime" required min="{{minDateFlight}}">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3" style="margin-top: 15px;">
                                <h4>Economy Class</h4>
                            <label for="amountOfTicketsEC" style="margin-top:15px;">Amount Of AirTickets</label>
                            <input type="number" class="form-control" name="model.AmountOfTicketsEC" id="amountOfTicketsEC" placeholder="Enter amount of airtickets" min="0" max="1000" style="margin-top: 10px;">
                            <label for="ticketCostEC" style="margin-top:15px;">Price Per 1 Ticket</label>
                            <input type="number" class="form-control" name="model.CostEC" id="ticketCostEC" placeholder="Enter price per 1 ticket" step="0.01" min="0" max="10000" style="margin-top: 10px;">
                                <div class="mb-3">
                                    <label for="includeLuggageForEconomyClass" class="form-label" style="margin-top: 15px;">Include Luggage</label><br>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageEC" id="includeLuggageForEconomyClassYes" value="true">
                                        <label class="form-check-label" for="includeLuggageForEconomyClassYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageEC" id="includeLuggageForEconomyClassNo" value="false">
                                        <label class="form-check-label" for="includeLuggageForEconomyClassNo">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <h4>Business Class</h4>
                                <label for="amountOfTicketsBC" style="margin-top:15px;">Amount Of AirTickets</label>
                            <input type="number" class="form-control" name="model.AmountOfTicketsBC" id="amountOfTicketsBC" placeholder="Enter amount of airtickets" min="0" max="1000" style="margin-top: 10px;">
                            <label for="ticketCostBC" style="margin-top:15px;">Price Per 1 Ticket</label>
                            <input type="number" class="form-control" name="model.CostBC" id="ticketCostBC" placeholder="Enter price per 1 ticket" step="0.01" min="0" max="10000" style="margin-top: 10px;">
                                <div class="mb-3">
                                    <label for="includeLuggageForBusinessClass" class="form-label" style="margin-top: 15px;">Include Luggage</label><br>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageBC" id="includeLuggageForBusinessClassYes" value="true">
                                        <label class="form-check-label" for="includeLuggageForBusinessClassYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageBC" id="includeLuggageForBusinessClassNo" value="false">
                                        <label class="form-check-label" for="includeLuggageForBusinessClassNo">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <h4>First Class</h4>
                                <label for="amountOfTicketsFC" style="margin-top:15px;">Amount Of AirTickets</label>
                                <input type="number" class="form-control" name="model.AmountOfTicketsFC" id="amountOfTicketsFC" placeholder="Enter amount of airtickets" min="0" max="1000" style="margin-top: 10px;">
                                <label for="ticketCostFC" style="margin-top:15px;">Price Per 1 Ticket</label>
                                <input type="number" class="form-control" name="model.CostFC" id="ticketCostFC" placeholder="Enter price per 1 ticket" step="0.01" min="0" max="10000" style="margin-top: 10px;">
                                <div class="mb-3">
                                    <label for="includeLuggageForFirstClass" class="form-label" style="margin-top: 15px;">Include Luggage</label><br>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageFC" id="includeLuggageForFirstClassYes" value="true">
                                        <label class="form-check-label" for="includeLuggageForFirstClassYes">Yes</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="model.IncludeLuggageFC" id="includeLuggageForFirstClassNo" value="false">
                                        <label class="form-check-label" for="includeLuggageForFirstClassNo">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="attraction-info" style="text-align: center;">
                                <button id="save-button-attraction" type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Save</button>
                        </form>
                        <form asp-action="ClearForm" asp-controller="Account" asp-anti-forgery="true" enctype="multipart/form-data" style="display: inline-block;">
                            <button type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Clear</button>
                        </form>
                    </div>
                    <div id="notificationAirTicket" class="text-danger1" style="display:none; margin-top: 20px;"></div>
            </div>
                    <div id="accomodation-fields" class="mt-5" style="display: none;">
                        <form id="accomodation-form" asp-action="SaveAccomodationForm" asp-controller="Account" style="display: inline-block;" asp-anti-forgery="true" enctype="multipart/form-data" onsubmit="return validateAccomodationForm()">
                            <div id="photoContainerAccomodation" class="d-flex flex-wrap"></div>
                            <input type="hidden" id="photoDataAccomodation" name="photoDataAccomodation" />
                            <div class="form-group">
                                <input type="file" name="photosAccomodation" id="photoUploadAccomodation" multiple style="display:none;">
                                <button type="button" class="btn btn-primary" id="uploadBtnAccomodation">Upload Photos</button>
                            </div>
                            <script>
                                $(document).ready(function () {
                                    let photoArrayAccomodation = [];

                                    $("#uploadBtnAccomodation").click(function () {
                                        $("#photoUploadAccomodation").click();
                                    });

                                    $("#photoUploadAccomodation").change(function () {
                                        var files = this.files;
                                        var container = $("#photoContainerAccomodation");

                                        $.each(files, function (index, file) {
                                            var reader = new FileReader();
                                            reader.onload = function (e) {
                                                var imageSrc = e.target.result;
                                                var image = $('<div class="photo-item d-flex align-items-center justify-content-center position-relative"></div>').append(
                                                    $('<img class="img-thumbnail">').attr({ 'src': imageSrc, 'data-src': imageSrc }).click(function () {
                                                        openPhotoAccomodation($(this).attr('data-src'));
                                                    }),
                                                    $('<button class="btn btn-sm btn-danger delete-btn position-absolute" title="Delete">&times;</button>').click(function () {
                                                        $(this).parent().remove();
                                                        photoArrayAccomodation = photoArrayAccomodation.filter(src => src !== imageSrc);
                                                        $("#photoDataAccomodation").val(JSON.stringify(photoArrayAccomodation));
                                                    })
                                                );
                                                container.append(image);
                                                photoArrayAccomodation.push(imageSrc);
                                                $("#photoDataAccomodation").val(JSON.stringify(photoArrayAccomodation));
                                            };
                                            reader.readAsDataURL(file);
                                        });
                                    });
                                });

                                // Функция для отображения увеличенного изображения
                                function openPhotoAccomodation(imgSrc) {
                                    var enlargedImgContainer = document.getElementById('enlarged-photo-container2');
                                    var enlargedImg = document.getElementById('enlarged-photo2');
                                    enlargedImg.src = imgSrc;
                                    enlargedImgContainer.style.display = 'block';
                                }

                                // Функция для закрытия увеличенного изображения
                                function closePhotoAccomodation() {
                                    var enlargedImgContainer = document.getElementById('enlarged-photo-container2');
                                    enlargedImgContainer.style.display = 'none';
                                }
                            </script>

                            <!-- Скрытый контейнер для увеличенного изображения -->
                            <div id="enlarged-photo-container2" class="enlarged-photo-container2">
                                <span class="close-btnn" onclick="closePhotoAccomodation()">✕</span>
                                <img id="enlarged-photo2" class="enlarged-photo2">
                            </div>

                            <div class="form-group">
                                <label for="accomodationName" style="margin-top: 15px;">Accomodation Name</label>
                                <input type="text" name="model.Name" class="form-control" id="accomodationName" placeholder="Enter the accomodation name" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="accomodationCountry" style="margin-top: 15px;">Country Of Accomodation</label>
                                <input type="text" name="model.Country" class="form-control" id="accomodationCountry" placeholder="Enter the country of accomodation" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="accomodationCity" style="margin-top: 15px;">City Of Accomodation</label>
                                <input type="text" name="model.City" class="form-control" id="accomodationCity" placeholder="Enter the city of accomodation" style="margin-top: 10px;">
                            </div>
                            <div class="form-group">
                                <label for="accomodationAddress" style="margin-top: 15px;">Address Of Accomodation</label>
                                <input type="text" name="model.Address" class="form-control" id="accomodationAddress" placeholder="Enter the address of accomodation" style="margin-top: 10px;">
                            </div>
                            <div class="mb-3">
                                <label for="accomodationType" class="form-label" style="margin-top: 15px;">Type Of Accomodation</label>
                                <div class="input-group">
                                    <select class="form-select" id="accomodationType" name="model.TypeOfAccomodation" type="hidden">
                                        <option value="Hotel">Hotel</option>
                                        <option value="Hostel">Hostel</option>
                                        <option value="Apartment">Apartment</option>
                                        <option value="Flat">Flat</option>
                                        <option value="House">House</option>
                                        <option value="Villa">Villa</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="nutritionType" class="form-label" style="margin-top: 15px;">Types Of Nutrition</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="model.TypesOfNutrition[]" id="BreakfastIncl" value="Breakfast">
                                    <label class="form-check-label" for="nutritionType">Breakfast Included</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="model.TypesOfNutrition[]" id="BreakfastDinnerIncl" value="Breakfast & Dinner">
                                    <label class="form-check-label" for="nutritionType">Breakfast & Dinner Included</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="model.TypesOfNutrition[]" id="AllIncl" value="All Inclusive">
                                    <label class="form-check-label" for="nutritionType">All Inclusive</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="model.TypesOfNutrition[]" id="WithoutIncl" value="Without Nutrition">
                                    <label class="form-check-label" for="nutritionType">Without Nutrition</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="parking" class="form-label" style="margin-top: 15px;">Parking</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Parking" id="parkingYes" value="true">
                                    <label class="form-check-label" for="parkingYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Parking" id="parkingNo" value="false">
                                    <label class="form-check-label" for="parkingNo">No</label>
                                </div>
                            </div>
                        <label for="swimmingpools" style="margin-top:15px;">Amount Of Swimming Pools</label>
                        <input type="number" class="form-control" name="model.SwimmingPool" id="swimmingpools" placeholder="Enter amount of swimming pools" min="0" max="20" style="margin-top: 10px;">
                        <div class="mb-3">
                                <label for="freeWIFI" class="form-label" style="margin-top: 15px;">Free WIFI</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FreeWIFI" id="freeWIFIYes" value="true">
                                    <label class="form-check-label" for="freeWIFIYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FreeWIFI" id="freeWIFINo" value="false">
                                    <label class="form-check-label" for="freeWIFINo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="privateBeach" class="form-label" style="margin-top: 15px;">Private Beach</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.PrivateBeach" id="privateBeachYes" value="true">
                                    <label class="form-check-label" for="privateBeachYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.PrivateBeach" id="privateBeachNo" value="false">
                                    <label class="form-check-label" for="privateBeachNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="lineOfBeach" class="form-label" style="margin-top: 15px;">Line Of Beach</label>
                                <div class="input-group">
                                    <select class="form-select" id="lineOfBeach" name="model.LineOfBeach" type="hidden">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3">3</option>
                                        <option value="0">Without Beach Around</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="SPA" class="form-label" style="margin-top: 15px;">SPA</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.SPA" id="SPAYes" value="true">
                                    <label class="form-check-label" for="SPAYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.SPA" id="SPANo" value="false">
                                    <label class="form-check-label" for="SPANo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="Bar" class="form-label" style="margin-top: 15px;">Bar</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Bar" id="BarYes" value="true">
                                    <label class="form-check-label" for="BarYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Bar" id="BarNo" value="false">
                                    <label class="form-check-label" for="BarNo">No</label>
                                </div>
                            </div>
                            <label for="restaurants" style="margin-top:15px;">Amount Of Restaurants</label>
                            <input type="number" class="form-control" name="model.Restaurants" id="restaurants" placeholder="Enter amount of restaurants" min="0" max="10" style="margin-top: 10px;">
                            <div class="mb-3">
                                <label for="garden" class="form-label" style="margin-top: 15px;">Garden</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Garden" id="gardenYes" value="true">
                                    <label class="form-check-label" for="gardenYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.Garden" id="gardenNo" value="false">
                                    <label class="form-check-label" for="gardenNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="transferToAirport" class="form-label" style="margin-top: 15px;">Transfer To Airport</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.TransferToAirport" id="transferToAirportYes" value="true">
                                    <label class="form-check-label" for="transferToAirportYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.TransferToAirport" id="transferToAirportNo" value="false">
                                    <label class="form-check-label" for="transferToAirportNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="tactileSigns" class="form-label" style="margin-top: 15px;">Tactile Signs</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.TactileSigns" id="tactileSignsYes" value="true">
                                    <label class="form-check-label" for="tactileSignsYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.TactileSigns" id="tactileSignsNo" value="false">
                                    <label class="form-check-label" for="tactileSignsNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="smookingRooms" class="form-label" style="margin-top: 15px;">Smooking Rooms</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.SmookingRooms" id="smookingRoomsYes" value="true">
                                    <label class="form-check-label" for="smookingRoomsYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.SmookingRooms" id="smookingRoomsNo" value="false">
                                    <label class="form-check-label" for="smookingRoomsNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="familyRooms" class="form-label" style="margin-top: 15px;">Family Rooms</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FamilyRooms" id="familyRoomsYes" value="true">
                                    <label class="form-check-label" for="familyRoomsYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FamilyRooms" id="familyRoomsNo" value="false">
                                    <label class="form-check-label" for="familyRoomsNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="carChargingStation" class="form-label" style="margin-top: 15px;">Car Charging Station</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.CarChargingStation" id="carChargingStationYes" value="true">
                                    <label class="form-check-label" for="carChargingStationYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.CarChargingStation" id="carChargingStationNo" value="false">
                                    <label class="form-check-label" for="carChargingStationNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="wheelchairAccessible" class="form-label" style="margin-top: 15px;">Wheelchair Accessible</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.WheelchairAccessible" id="wheelchairAccessibleYes" value="true">
                                    <label class="form-check-label" for="wheelchairAccessibleYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.WheelchairAccessible" id="wheelchairAccessibleNo" value="false">
                                    <label class="form-check-label" for="wheelchairAccessibleNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="fitnessCentre" class="form-label" style="margin-top: 15px;">Fitness Centre</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FitnessCentre" id="fitnessCentreYes" value="true">
                                    <label class="form-check-label" for="fitnessCentreYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.FitnessCentre" id="fitnessCentreNo" value="false">
                                    <label class="form-check-label" for="fitnessCentreNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="petsAllowed" class="form-label" style="margin-top: 15px;">Pets Allowed</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.PetsAllowed" id="petsAllowedYes" value="true">
                                    <label class="form-check-label" for="petsAllowedYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.PetsAllowed" id="petsAllowedNo" value="false">
                                    <label class="form-check-label" for="petsAllowedNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="deliveryFoodToTheRoom" class="form-label" style="margin-top: 15px;">Delivery Food To The Room</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.DeliveryFoodToTheRoom" id="deliveryFoodToTheRoomYes" value="true">
                                    <label class="form-check-label" for="deliveryFoodToTheRoomYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.DeliveryFoodToTheRoom" id="deliveryFoodToTheRoomNo" value="false">
                                    <label class="form-check-label" for="deliveryFoodToTheRoomNo">No</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="everyHourFrontDesk" class="form-label" style="margin-top: 15px;">Every Hour Front Desk</label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.EveryHourFrontDesk" id="everyHourFrontDeskYes" value="true">
                                    <label class="form-check-label" for="everyHourFrontDeskYes">Yes</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="model.EveryHourFrontDesk" id="everyHourFrontDeskNo" value="false">
                                    <label class="form-check-label" for="everyHourFrontDeskNo">No</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="descriptionAccomodation" style="margin-top: 15px;">Accomodation Description</label>
                                <textarea class="form-control" id="descriptionAccomodation" name="model.Description" placeholder="Enter the accomodation description" rows="5" style="margin-top: 10px;"></textarea>
                            </div>
                            <div class="accomodation-info" style="text-align: center;">
                                <button id="save-button-accomodation" type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Save</button>
                            </form>
                        <form asp-action="ClearForm" asp-controller="Account" asp-anti-forgery="true" enctype="multipart/form-data" style="display: inline-block;">
                            <button type="submit" class="btn btn-primary" style="margin-right: 20px; margin-top: 30px;">Clear</button>
                        </form>
                    </div>
                    <div id="notificationAccomodation" class="text-danger11" style="display:none;"></div>
            </div>
        </div>
    </div>    

            @section scripts {
                <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                <script>
                        $(document).ready(function () {
                            $('.btn-entity').click(function () {
                                $('.btn-entity').removeClass('selected');
                                $(this).addClass('selected');
                                var entityName = $(this).data('entity');
                                if (entityName === "Car") {
                                    $('#car-fields').show();
                                    $('#entertainment-fields').hide();
                                    $('#flight-fields').hide();
                                    $('#accomodation-fields').hide();
                                }
                                else if (entityName === "Attraction") {
                                    $('#entertainment-fields').show();
                                    $('#car-fields').hide();
                                    $('#flight-fields').hide();
                                    $('#accomodation-fields').hide();
                                }
                                else if (entityName === "Accommodation") {
                                    $('#entertainment-fields').hide();
                                    $('#car-fields').hide();
                                    $('#flight-fields').hide();
                                    $('#accomodation-fields').show();
                                }
                                else if (entityName === "Flight") {
                                    $('#entertainment-fields').hide();
                                    $('#car-fields').hide();
                                    $('#flight-fields').show();
                                    $('#accomodation-fields').hide();
                                } else {
                                    $('#car-fields').hide();
                                    $('#entertainment-fields').hide();
                                    $('#flight-fields').hide();
                                    $('#accomodation-fields').hide();
                                }
                    });
                        });
                </script>
                <script>
                    $(document).ready(function () {
                        // Получить текущую дату и время
                        var currentDate = new Date();
                        // Добавить 1 час к текущей дате для минимальной даты старта
                        var minStartDate = new Date(currentDate.getTime() + (1 * 60 * 60 * 1000));
                        // Добавить 2 часа к текущей дате для минимальной даты финиша
                        var minEndDate = new Date(currentDate.getTime() + (2 * 60 * 60 * 1000));

                        // Установить значения атрибутов min для полей ввода datetime-local
                        document.querySelector('input[name="model.startDates[]"]').setAttribute('min', formatDate(minStartDate));
                        document.querySelector('input[name="model.endDates[]"]').setAttribute('min', formatDate(minEndDate));

                        // Обработчик клика на кнопку "Добавить промежуток дат"
                        $('#add-booking-date').click(function () {
                            // Создаем HTML для нового промежутка дат
                            var newBookingDateHtml = `
                                    <div class="booking-date" style="margin-top: 15px;">
                                        <label style="margin-right: 10px;">Start Date:</label>
                                        <input type="datetime-local" name="model.startDates[]" required min="${formatDate(minStartDate)}">
                                        <label style="margin-left: 10px;">Finish Date:</label>
                                        <input type="datetime-local" name="model.endDates[]" required min="${formatDate(minEndDate)}">
                                    </div>
                                `;

                            // Добавляем новый промежуток дат в список
                            $('#booking-dates').append(newBookingDateHtml);
                        });

                        // Обработчик события input для поля ввода начальной даты
                        $(document).on('input', 'input[name="model.startDates[]"]', function () {
                            // Получить выбранную начальную дату
                            var selectedStartDate = new Date(this.value);
                            // Добавить 1 час к выбранной начальной дате для минимальной даты конечной даты
                            var minEndDateAfterStart = new Date(selectedStartDate.getTime() + (1 * 60 * 60 * 1000));
                            // Обновить минимальную дату конечной даты
                            $(this).closest('.booking-date').find('input[name="model.endDates[]"]').attr('min', formatDate(minEndDateAfterStart));
                        });

                        // Функция для форматирования даты в формат yyyy-MM-ddThh:mm для поля ввода datetime-local
                        function formatDate(date) {
                            var year = date.getFullYear();
                            var month = (date.getMonth() + 1).toString().padStart(2, '0');
                            var day = date.getDate().toString().padStart(2, '0');
                            var hours = date.getHours().toString().padStart(2, '0');
                            var minutes = date.getMinutes().toString().padStart(2, '0');
                            return `${year}-${month}-${day}T${hours}:${minutes}`;
                        }
                    });
                </script>
                <script>
                    $(document).ready(function () {
                        var currentDate = new Date();
                        var minDate = new Date(currentDate.getTime());

                    // Устанавливаем значение атрибута min для поля ввода даты

                        document.querySelector('input[name="model.AvailableDates[]"]').setAttribute('min', formatDatee(minDate));

                        $('#add-booking-date-attraction').click(function () {
                            var newBookingDateHtmlAttr = `
                                                    <div class="booking-date-attraction" style="margin-top: 15px;">
                                                        <div class="input-group">
                                                            <input type="date" name="model.AvailableDates[]" required min="${formatDatee(minDate)}" class="form-control">
                                                            <input type="number" class="form-control" name="model.AmountOfTickets[]" placeholder="Enter amount of tickets" min="0" max="10000">
                                                        </div>
                                                    </div>
                                                    `;
                            $('#booking-dates-attraction').append(newBookingDateHtmlAttr);
                        });
                    });

                    function formatDatee(date) {
                        var year = date.getFullYear();
                        var month = (date.getMonth() + 1).toString().padStart(2, '0');
                        var day = date.getDate().toString().padStart(2, '0');
                        return `${year}-${month}-${day}`;
                    }
                </script>
                <script>
                    $(document).ready(function () {
                        var currentDate = new Date();
                        var minDate = new Date(currentDate.getTime());

                        // Устанавливаем значение атрибута min для поля ввода даты

                    document.querySelector('input[name="model.DepartureTime"]').setAttribute('min', formatDateee(minDate));
                    document.querySelector('input[name="model.ArrivalTime"]').setAttribute('min', formatDateee(minDate));
                    });

                    function formatDateee(date) {
                    var year = date.getFullYear();
                    var month = (date.getMonth() + 1).toString().padStart(2, '0');
                    var day = date.getDate().toString().padStart(2, '0');
                    var hours = date.getHours().toString().padStart(2, '0');
                    var minutes = date.getMinutes().toString().padStart(2, '0');
                    return `${year}-${month}-${day}T${hours}:${minutes}`;
                    }

                    // Обработчик события input для поля ввода начальной даты
                    $(document).on('input', 'input[name="model.DepartureTime"]', function () {
                        // Получить выбранную начальную дату
                        var selectedDepartureTime = new Date(this.value);
                        // Добавить 1 час к выбранной начальной дате для минимальной даты конечной даты
                    var minArrivalDateAfterStart = new Date(selectedDepartureTime.getTime() + (1 * 60 * 60 * 1000));
                        // Обновить минимальную дату конечной даты
                    $(this).closest('.booking-date-flight').find('input[name="model.ArrivalTime"]').attr('min', formatDateee(minArrivalDateAfterStart));
                    });
                </script>
            <script>
                $(document).ready(function () {


                    $('#add-booking-date-room').click(function () {
                        var newBookingDateHtmlAttr = `
                                                        <div class="booking-date-room" style="margin-top: 15px;">
                                                            <div class="input-group">
                                                                <input type="date" class="form-control" name="model.AvailableDatesRoom[]" required min="@DateTime.Now.ToString("yyyy-MM-dd")">
                                                                <input type="number" class="form-control" name="model.AmountOfAvailableSameRooms[]" placeholder="Enter amount of same available rooms" min="0" max="100">
                                                            </div>
                                                        </div>
                                                                    `;
                        $('#booking-dates-room').append(newBookingDateHtmlAttr);
                    });
                });

            </script>
            <script>
                $(document).ready(function () {
                    let photoArrayRoom = [];

                    $("#uploadBtnRoom").click(function () {
                        $("#photoUploadRoom").click();
                    });

                    $("#photoUploadRoom").change(function () {
                        var files = this.files;
                        var container = $("#photoContainerRoom");

                        $.each(files, function (index, file) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                var imageSrc = e.target.result;
                                var image = $('<div class="photo-item d-flex align-items-center justify-content-center position-relative"></div>').append(
                                    $('<img class="img-thumbnail">').attr({ 'src': imageSrc, 'data-src': imageSrc }).click(function () {
                                        openPhotoRoom($(this).attr('data-src'));
                                    }),
                                    $('<button class="btn btn-sm btn-danger delete-btn position-absolute" title="Delete">&times;</button>').click(function () {
                                        $(this).parent().remove();
                                        photoArrayRoom = photoArrayRoom.filter(src => src !== imageSrc);
                                        $("#photoDataRoom").val(JSON.stringify(photoArrayRoom));
                                    })
                                );
                                container.append(image);
                                photoArrayRoom.push(imageSrc);
                                $("#photoDataRoom").val(JSON.stringify(photoArrayRoom));
                            };
                            reader.readAsDataURL(file);
                        });
                    });
                });

                // Функция для отображения увеличенного изображения
                function openPhotoRoom(imgSrc) {
                    var enlargedImgContainer = document.getElementById('enlarged-photo-container3');
                    var enlargedImg = document.getElementById('enlarged-photo3');
                    enlargedImg.src = imgSrc;
                    enlargedImgContainer.style.display = 'block';
                }

                // Функция для закрытия увеличенного изображения
                function closePhotoRoom() {
                    var enlargedImgContainer = document.getElementById('enlarged-photo-container3');
                    enlargedImgContainer.style.display = 'none';
                }
            </script>
               }
        </div>
    </div>
  </body>
</main>